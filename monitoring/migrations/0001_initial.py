# Generated by Django 5.1.2 on 2024-10-27 07:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0002_alter_device_location_alter_device_manufacturer_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MetricThreshold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('CPU', 'CPU Usage'), ('MEMORY', 'Memory Usage'), ('DISK', 'Disk Usage'), ('NETWORK', 'Network Traffic'), ('RESPONSE', 'Response Time'), ('ERROR', 'Error Rate'), ('CUSTOM', 'Custom Metric')], max_length=20)),
                ('warning_threshold', models.FloatField()),
                ('critical_threshold', models.FloatField()),
                ('severity', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('CRITICAL', 'Critical'), ('ERROR', 'Error')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.device')),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('CPU', 'CPU Usage'), ('MEMORY', 'Memory Usage'), ('DISK', 'Disk Usage'), ('NETWORK', 'Network Traffic'), ('RESPONSE', 'Response Time'), ('ERROR', 'Error Rate'), ('CUSTOM', 'Custom Metric')], max_length=20)),
                ('value', models.FloatField()),
                ('unit', models.CharField(max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.device')),
            ],
            options={
                'indexes': [models.Index(fields=['device', 'metric_type', 'timestamp'], name='monitoring__device__7acd86_idx')],
            },
        ),
    ]
